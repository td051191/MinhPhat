import { useQuery } from "@tanstack/react-query";
import { Header } from "@/components/Header";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Link } from "react-router-dom";
import { useLanguage } from "@/hooks/useLanguage";
import { useCart } from "@/hooks/useCart";
import {
  productsApi,
  categoriesApi,
  contentApi,
  newsletterApi,
} from "@/lib/api";
import { useState } from "react";
import {
  ShoppingCart,
  Star,
  Truck,
  Shield,
  Leaf,
  Clock,
  ArrowRight,
  Heart,
  Plus,
  Loader2,
} from "lucide-react";

export default function Index() {
  const { language, t } = useLanguage();
  const { add } = useCart();
  const [newsletterEmail, setNewsletterEmail] = useState("");
  const [isSubscribing, setIsSubscribing] = useState(false);

  // Fetch data from database
  const { data: productsData, isLoading: loadingProducts } = useQuery({
    queryKey: ["products", "featured"],
    queryFn: () => productsApi.getFeatured(4),
  });

  const { data: categoriesData, isLoading: loadingCategories } = useQuery({
    queryKey: ["categories"],
    queryFn: () => categoriesApi.getAll(),
  });

  const { data: heroContent } = useQuery({
    queryKey: ["content", "hero"],
    queryFn: () => contentApi.getBySection("hero"),
  });

  const { data: featuresContent } = useQuery({
    queryKey: ["content", "features"],
    queryFn: () => contentApi.getBySection("features"),
  });

  const { data: newsletterContent } = useQuery({
    queryKey: ["content", "newsletter"],
    queryFn: () => contentApi.getBySection("newsletter"),
  });

  const handleNewsletterSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!newsletterEmail) return;

    setIsSubscribing(true);
    try {
      await newsletterApi.subscribe(newsletterEmail, language);
      setNewsletterEmail("");
      alert(
        language === "en" ? "Successfully subscribed!" : "ƒêƒÉng k√Ω th√†nh c√¥ng!",
      );
    } catch (error) {
      alert(
        language === "en"
          ? "Failed to subscribe. Please try again."
          : "ƒêƒÉng k√Ω th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i.",
      );
    } finally {
      setIsSubscribing(false);
    }
  };

  // Get translated content with fallbacks
  const getContent = (key: string, fallback: { en: string; vi: string }) => {
    const content =
      heroContent?.content.find((c) => c.key === key) ||
      featuresContent?.content.find((c) => c.key === key) ||
      newsletterContent?.content.find((c) => c.key === key);
    return content ? t(content.value) : t(fallback);
  };

  const featuredProducts = productsData?.products || [];
  const categories = categoriesData?.categories || [];

  // Loading state
  if (loadingProducts || loadingCategories) {
    return (
      <div className="min-h-screen bg-background">
        <Header />
        <div className="flex items-center justify-center min-h-[60vh]">
          <Loader2 className="w-8 h-8 animate-spin text-primary" />
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-background">
      <Header />

      {/* Hero Section */}
      <section className="relative bg-gradient-to-br from-fresh-green/5 via-fresh-lime/5 to-fresh-yellow/5 py-20">
        <div className="container mx-auto px-4">
          <div className="grid lg:grid-cols-2 gap-12 items-center">
            <div className="space-y-8">
              <div className="space-y-4">
                <Badge className="bg-fresh-green text-white">
                  üå±{" "}
                  {language === "en"
                    ? "100% Fresh & Organic"
                    : "100% T∆∞∆°i & H·ªØu c∆°"}
                </Badge>
                <h1 className="text-5xl lg:text-6xl font-bold leading-tight">
                  <span className="block">
                    {getContent("hero_title", {
                      en: "Fresh Fruits",
                      vi: "Tr√°i c√¢y t∆∞∆°i",
                    })
                      .split(" ")
                      .slice(0, 2)
                      .join(" ")}
                  </span>
                  <span className="block text-fresh-green">
                    {getContent("hero_title", {
                      en: "Delivered Daily",
                      vi: "Giao h√†ng h√†ng ng√†y",
                    })
                      .split(" ")
                      .slice(2)
                      .join(" ")}
                  </span>
                </h1>
                <p className="text-xl text-muted-foreground">
                  {getContent("hero_subtitle", {
                    en: "Farm-fresh fruits delivered to your doorstep. Support local farmers while enjoying the finest quality produce at unbeatable prices.",
                    vi: "Tr√°i c√¢y t∆∞∆°i t·ª´ trang tr·∫°i giao ƒë·∫øn t·∫≠n nh√†. H·ªó tr·ª£ n√¥ng d√¢n ƒë·ªãa ph∆∞∆°ng ƒë·ªìng th·ªùi th∆∞·ªüng th·ª©c s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng cao nh·∫•t v·ªõi gi√° c·∫£ kh√¥ng th·ªÉ c·∫°nh tranh h∆°n.",
                  })}
                </p>
              </div>

              <div className="flex flex-col sm:flex-row gap-4">
                <Button
                  size="lg"
                  className="bg-primary hover:bg-primary/90 text-primary-foreground"
                >
                  <ShoppingCart className="w-5 h-5 mr-2" />
                  {language === "en" ? "Shop Now" : "Mua ngay"}
                </Button>
                <Button variant="outline" size="lg">
                  {language === "en" ? "Learn More" : "T√¨m hi·ªÉu th√™m"}
                  <ArrowRight className="w-5 h-5 ml-2" />
                </Button>
              </div>

              <div className="flex items-center gap-8 pt-4">
                <div className="flex items-center gap-2">
                  <Truck className="w-5 h-5 text-fresh-green" />
                  <span className="font-medium">
                    {language === "en" ? "Free Delivery" : "Mi·ªÖn ph√≠ giao h√†ng"}
                  </span>
                </div>
                <div className="flex items-center gap-2">
                  <Shield className="w-5 h-5 text-fresh-green" />
                  <span className="font-medium">
                    {language === "en"
                      ? "Quality Guarantee"
                      : "B·∫£o ƒë·∫£m ch·∫•t l∆∞·ª£ng"}
                  </span>
                </div>
              </div>
            </div>

            <div className="relative">
              <div className="text-9xl lg:text-[12rem] text-center opacity-90">
                üçéüçäüçå
              </div>
              <div className="absolute inset-0 bg-gradient-to-t from-background/20 to-transparent rounded-3xl"></div>
            </div>
          </div>
        </div>
      </section>

      {/* Categories */}
      <section className="py-16 bg-secondary/30">
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold mb-4">
              {language === "en" ? "Shop by Category" : "Mua theo danh m·ª•c"}
            </h2>
            <p className="text-muted-foreground max-w-2xl mx-auto">
              {language === "en"
                ? "Discover our wide selection of fresh produce, carefully sourced from local farms"
                : "Kh√°m ph√° l·ª±a ch·ªçn ƒëa d·∫°ng c·ªßa ch√∫ng t√¥i v·ªÅ n√¥ng sÔøΩÔøΩn t∆∞∆°i, ƒë∆∞·ª£c l·ª±a ch·ªçn c·∫©n th·∫≠n t·ª´ c√°c trang tr·∫°i ƒë·ªãa ph∆∞∆°ng"}
            </p>
          </div>

          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-6">
            {categories.slice(0, 6).map((category) => (
              <Card
                key={category.id}
                className="group hover:shadow-lg transition-all duration-300 cursor-pointer border-0"
              >
                <CardContent className="p-6 text-center">
                  <div className="w-16 h-16 bg-muted rounded-full flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform">
                    <span className="text-2xl">{category.name.en.charAt(0)}</span>
                  </div>
                  <h3 className="font-semibold mb-1">{t(category.name)}</h3>
                  <p className="text-sm text-muted-foreground">
                    {category.count}+ {language === "en" ? "varieties" : "lo·∫°i"}
                  </p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Featured Products */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          <div className="flex items-center justify-between mb-12">
            <div>
              <h2 className="text-3xl font-bold mb-4">
                {language === "en" ? "Featured Products" : "S·∫£n ph·∫©m n·ªïi b·∫≠t"}
              </h2>
              <p className="text-muted-foreground">
                {language === "en"
                  ? "Hand-picked fresh fruits at the best prices"
                  : "Tr√°i c√¢y t∆∞∆°i ƒë∆∞·ª£c ch·ªçn l·ªçc v·ªõi gi√° t·ªët nh·∫•t"}
              </p>
            </div>
            <Button variant="outline">
              {language === "en" ? "View All" : "Xem t·∫•t c·∫£"}
              <ArrowRight className="w-4 h-4 ml-2" />
            </Button>
          </div>

          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
            {featuredProducts.map((product) => (
              <Card
                key={product.id}
                className="group hover:shadow-xl transition-all duration-300 border-0 bg-card"
              >
                <CardContent className="p-0">
                  <div className="relative p-6 text-center bg-gradient-to-br from-secondary/20 to-secondary/5">
                    {product.featured && (
                      <Badge className="absolute top-3 left-3 bg-fresh-green text-white">
                        Featured
                      </Badge>
                    )}
                    <Button
                      variant="ghost"
                      size="icon"
                      className="absolute top-3 right-3 opacity-0 group-hover:opacity-100 transition-opacity bg-background/80 hover:bg-background"
                    >
                      <Heart className="w-4 h-4" />
                    </Button>
                    <div className="text-8xl mb-4">{product.image}</div>
                  </div>

                  <div className="p-6">
                    <h3 className="font-semibold text-lg mb-2">
                      {t(product.name)}
                    </h3>

                    <div className="flex items-center gap-1 mb-3">
                      <div className="flex items-center">
                        {[...Array(5)].map((_, i) => (
                          <Star
                            key={i}
                            className={`w-4 h-4 ${i < Math.floor(product.rating) ? "text-fresh-yellow fill-current" : "text-muted-foreground"}`}
                          />
                        ))}
                      </div>
                      <span className="text-sm text-muted-foreground">
                        ({product.reviewsCount})
                      </span>
                    </div>

                    <div className="flex items-center justify-between mb-4">
                      <div className="flex items-center gap-2">
                        <span className="text-2xl font-bold text-primary">
                          ${product.price}
                        </span>
                        {product.originalPrice && (
                          <span className="text-muted-foreground line-through">
                            ${product.originalPrice}
                          </span>
                        )}
                      </div>
                      <span className="text-sm text-muted-foreground">
                        {product.weight || (language === "en" ? "per unit" : "m·ªói ƒë∆°n v·ªã")}
                      </span>
                    </div>

                    <Button className="w-full bg-primary hover:bg-primary/90 text-primary-foreground" onClick={() => add(product, 1)}>
                      <Plus className="w-4 h-4 mr-2" />
                      {language === "en" ? "Add to Cart" : "Th√™m v√†o gi·ªè"}
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Features */}
      <section className="py-16 bg-fresh-green/5">
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold mb-4">
              {getContent("features_title", {
                en: "Why Choose Minh Ph√°t?",
                vi: "T·∫°i sao ch·ªçn Minh Ph√°t?",
              })}
            </h2>
            <p className="text-muted-foreground max-w-2xl mx-auto">
              {language === "en"
                ? "We're committed to delivering the freshest produce while supporting sustainable farming"
                : "Ch√∫ng t√¥i cam k·∫øt cung c·∫•p nh·ªØng s·∫£n ph·∫©m t∆∞∆°i nh·∫•t ƒë·ªìng th·ªùi h·ªó tr·ª£ n√¥ng nghi·ªáp b·ªÅn v·ªØng"}
            </p>
          </div>

          <div className="grid md:grid-cols-3 gap-8">
            <div className="text-center">
              <div className="w-16 h-16 bg-fresh-green rounded-full flex items-center justify-center mx-auto mb-6">
                <Leaf className="w-8 h-8 text-white" />
              </div>
              <h3 className="text-xl font-semibold mb-3">
                {language === "en" ? "100% Organic" : "100% H·ªØu c∆°"}
              </h3>
              <p className="text-muted-foreground">
                {language === "en"
                  ? "All our products are certified organic, grown without harmful pesticides or chemicals"
                  : "T·∫•t c·∫£ s·∫£n ph·∫©m c·ªßa ch√∫ng t√¥i ƒë·ªÅu ƒë∆∞·ª£c ch·ª©ng nh·∫≠n h·ªØu c∆°, tr·ªìng kh√¥ng c√≥ thu·ªëc tr·ª´ s√¢u ho·∫∑c h√≥a ch·∫•t c√≥ h·∫°i"}
              </p>
            </div>

            <div className="text-center">
              <div className="w-16 h-16 bg-fresh-orange rounded-full flex items-center justify-center mx-auto mb-6">
                <Truck className="w-8 h-8 text-white" />
              </div>
              <h3 className="text-xl font-semibold mb-3">
                {language === "en" ? "Fast Delivery" : "Giao h√†ng nhanh"}
              </h3>
              <p className="text-muted-foreground">
                {language === "en"
                  ? "Same-day delivery available. Fresh from farm to your table in hours, not days"
                  : "C√≥ giao h√†ng trong ng√†y. T∆∞∆°i t·ª´ trang tr·∫°i ƒë·∫øn b√†n c·ªßa b·∫°n trong v√†i gi·ªù, kh√¥ng ph·∫£i v√†i ng√†y"}
              </p>
            </div>

            <div className="text-center">
              <div className="w-16 h-16 bg-fresh-red rounded-full flex items-center justify-center mx-auto mb-6">
                <Shield className="w-8 h-8 text-white" />
              </div>
              <h3 className="text-xl font-semibold mb-3">
                {language === "en" ? "Quality Guarantee" : "B·∫£o ƒë·∫£m ch·∫•t l∆∞·ª£ng"}
              </h3>
              <p className="text-muted-foreground">
                {language === "en"
                  ? "Not satisfied? We'll replace or refund your order, no questions asked"
                  : "Kh√¥ng h√†i l√≤ng? Ch√∫ng t√¥i s·∫Ω thay th·∫ø ho·∫∑c ho√†n ti·ªÅn ƒë∆°n h√†ng c·ªßa b·∫°n, kh√¥ng c·∫ßn h·ªèi"}
              </p>
            </div>
          </div>
        </div>
      </section>

      {/* Newsletter */}
      <section className="py-16 bg-gradient-to-r from-fresh-green to-fresh-lime">
        <div className="container mx-auto px-4 text-center">
          <h2 className="text-3xl font-bold text-white mb-4">
            {getContent("newsletter_title", {
              en: "Stay Fresh with Our Newsletter",
              vi: "Lu√¥n c·∫≠p nh·∫≠t v·ªõi B·∫£n tin c·ªßa ch√∫ng t√¥i",
            })}
          </h2>
          <p className="text-white/90 mb-8 max-w-2xl mx-auto">
            {language === "en"
              ? "Get weekly updates on seasonal fruits, exclusive offers, and healthy recipes delivered to your inbox"
              : "Nh·∫≠n c·∫≠p nh·∫≠t h√†ng tu·∫ßn v·ªÅ tr√°i c√¢y theo m√πa, ∆∞u ƒë√£i ƒë·ªôc quy·ªÅn v√† c√¥ng th·ª©c n·∫•u ƒÉn l√†nh m·∫°nh ƒë∆∞·ª£c g·ª≠i ƒë·∫øn h·ªôp th∆∞ c·ªßa b·∫°n"}
          </p>
          <form
            onSubmit={handleNewsletterSubmit}
            className="flex flex-col sm:flex-row gap-4 max-w-md mx-auto"
          >
            <input
              type="email"
              value={newsletterEmail}
              onChange={(e) => setNewsletterEmail(e.target.value)}
              placeholder={
                language === "en" ? "Enter your email" : "Nh·∫≠p email c·ªßa b·∫°n"
              }
              className="flex-1 px-4 py-3 rounded-lg border-0 focus:ring-2 focus:ring-white"
              required
            />
            <Button
              type="submit"
              disabled={isSubscribing}
              className="bg-white text-fresh-green hover:bg-white/90"
            >
              {isSubscribing ? (
                <Loader2 className="w-4 h-4 animate-spin" />
              ) : language === "en" ? (
                "Subscribe"
              ) : (
                "ƒêƒÉng k√Ω"
              )}
            </Button>
          </form>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-muted py-12">
        <div className="container mx-auto px-4">
          <div className="grid md:grid-cols-4 gap-8">
            <div>
              <div className="flex items-center gap-2 mb-4">
                <div className="flex items-center justify-center w-8 h-8 bg-fresh-green rounded-full">
                  <Leaf className="w-4 h-4 text-white" />
                </div>
                <span className="text-xl font-bold text-primary">
                  Minh Ph√°t
                </span>
              </div>
              <p className="text-muted-foreground mb-4">
                {language === "en"
                  ? "Fresh, organic produce delivered daily to your doorstep."
                  : "N√¥ng s·∫£n t∆∞∆°i, h·ªØu c∆° ƒë∆∞·ª£c giao h√†ng h√†ng ng√†y ƒë·∫øn t·∫≠n nh√† b·∫°n."}
              </p>
              <div className="flex gap-4">
                <Button variant="ghost" size="icon">
                  üìò
                </Button>
                <Button variant="ghost" size="icon">
                  üì∑
                </Button>
                <Button variant="ghost" size="icon">
                  üê¶
                </Button>
              </div>
            </div>

            <div>
              <h4 className="font-semibold mb-4">
                {language === "en" ? "Shop" : "Mua s·∫Øm"}
              </h4>
              <div className="space-y-2">
                <Link
                  to="/fruits"
                  className="block text-muted-foreground hover:text-foreground"
                >
                  {language === "en" ? "Fruits" : "Tr√°i c√¢y"}
                </Link>
                <Link
                  to="/vegetables"
                  className="block text-muted-foreground hover:text-foreground"
                >
                  {language === "en" ? "Vegetables" : "Rau c·ªß"}
                </Link>
                <Link
                  to="/organic"
                  className="block text-muted-foreground hover:text-foreground"
                >
                  {language === "en" ? "Organic" : "H·ªØu c∆°"}
                </Link>
                <Link
                  to="/bundles"
                  className="block text-muted-foreground hover:text-foreground"
                >
                  {language === "en" ? "Bundles" : "G√≥i combo"}
                </Link>
              </div>
            </div>

            <div>
              <h4 className="font-semibold mb-4">
                {language === "en" ? "Support" : "H·ªó tr·ª£"}
              </h4>
              <div className="space-y-2">
                <a
                  href="#"
                  className="block text-muted-foreground hover:text-foreground"
                >
                  {language === "en" ? "Contact Us" : "Li√™n h·ªá"}
                </a>
                <a
                  href="#"
                  className="block text-muted-foreground hover:text-foreground"
                >
                  {language === "en" ? "FAQ" : "C√¢u h·ªèi th∆∞·ªùng g·∫∑p"}
                </a>
                <a
                  href="#"
                  className="block text-muted-foreground hover:text-foreground"
                >
                  {language === "en" ? "Shipping Info" : "Th√¥ng tin giao h√†ng"}
                </a>
                <a
                  href="#"
                  className="block text-muted-foreground hover:text-foreground"
                >
                  {language === "en" ? "Returns" : "ƒê·ªïi tr·∫£"}
                </a>
              </div>
            </div>

            <div>
              <h4 className="font-semibold mb-4">
                {language === "en" ? "Contact" : "Li√™n h·ªá"}
              </h4>
              <div className="space-y-2 text-muted-foreground">
                <p>üìû +1 (555) 123-4567</p>
                <p>üìß hello@minhphat.com</p>
                <p>üìç 123 Farm Street, Fresh Valley</p>
              </div>
            </div>
          </div>

          <div className="border-t border-border mt-8 pt-8 text-center text-muted-foreground">
            <p>
              &copy; 2024 Minh Ph√°t.{" "}
              {language === "en"
                ? "All rights reserved."
                : "T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u."}{" "}
              |
              <span className="mx-2">
                {language === "en" ? "Privacy Policy" : "Ch√≠nh s√°ch b·∫£o m·∫≠t"}
              </span>{" "}
              |
              <span className="mx-2">
                {language === "en" ? "Terms of Service" : "ƒêi·ªÅu kho·∫£n d·ªãch v·ª•"}
              </span>
            </p>
          </div>
        </div>
      </footer>
    </div>
  );
}
